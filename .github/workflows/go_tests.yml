# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Run tests
    permissions:
      contents: read
      pull-requests: read
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests
        run: go test -v ./...

  coverage:
    name: Go test coverage check
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: generate test coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      - name: check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml
          profile: cover.out
          threshold-total: 95

          ## when token is not specified (value '') this feature is turned off
          ## in this example badge is created and committed only for main branch
          git-token: ${{ github.ref_name == 'main' && secrets.GITHUB_TOKEN || '' }}
          ## name of branch where badges are stored
          ## ideally this should be orphan branch (see below how to create this branch)
          git-branch: badges
